{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","filterValue","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newPhone","handlePhoneChange","onSubmit","type","Persons","persons","removePerson","map","person","name","number","onClick","id","filter","toLowerCase","includes","el","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewPhone","setFilterValue","message","setMessage","useEffect","personsService","initialPersons","updatePerson","find","p","changedPerson","returnedPerson","catch","error","alert","className","event","target","preventDefault","newPerson","length","some","confirmUpdates","window","confirm","concat","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46f86095.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filterValue, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with:{\" \"}\r\n      <input value={filterValue} onChange={handleFilterChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  addPerson,\r\n  newName,\r\n  handleNameChange,\r\n  newPhone,\r\n  handlePhoneChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newPhone} onChange={handlePhoneChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, filterValue, removePerson }) => {\r\n  return (\r\n    <div>\r\n      {filterValue === \"\"\r\n        ? persons.map((person) => {\r\n            return (\r\n              <p key={person.id}>\r\n                {person.name} {person.number}\r\n                <button onClick={() => removePerson(person.id)}>\r\n                  Delete person\r\n                </button>\r\n              </p>\r\n            );\r\n          })\r\n        : persons\r\n            .filter((person) => person.name.toLowerCase().includes(filterValue))\r\n            .map((el) => (\r\n              <p key={el.id}>\r\n                {el.name} {el.number}\r\n                <button onClick={() => removePerson(el.id)}>\r\n                  Delete person\r\n                </button>\r\n              </p>\r\n            ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport personsService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [message, setMessage] = \"\";\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilterValue(event.target.value);\n  };\n  const cleanFields = () => {\n    setNewName(\"\");\n    setNewPhone(\"\");\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      id: persons.length + 1,\n      number: newPhone,\n    };\n    const personExists = persons.some((p) => p.name === newName);\n\n    if (personExists) {\n      const confirmUpdates = window.confirm(\n        \"Person already exists, would you like to change old number to a new one?\"\n      );\n      const person = persons.find((p) => p.name === newName);\n      if (confirmUpdates) {\n        updatePerson(person.id);\n      }\n    }\n    personsService\n      .create(newPerson)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setMessage(`New person ${returnedPerson.name} was added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      })\n      .catch((error) => alert(\"Error!\"));\n\n    cleanFields();\n  };\n\n  const removePerson = (id) => {\n    personsService\n      .remove(id)\n      .then((data) => {\n        const confirm = window.confirm(\"Are you sure you want to delete?\");\n        if (confirm) {\n          setPersons(persons.filter((person) => person.id !== id));\n        } else {\n          alert(\"No confirmation\");\n        }\n      })\n      .catch((error) => {\n        alert(`Error!`);\n      });\n  };\n\n  const updatePerson = (id) => {\n    const person = persons.find((p) => p.name === newName);\n    const changedPerson = { ...person, number: newPhone };\n    personsService\n      .update(id, changedPerson)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((person) => (person.id !== id ? person : returnedPerson))\n        );\n      })\n      .catch((error) => {\n        alert(\"can't update the person info\");\n        setPersons(persons.filter((p) => p.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div className=\"success-message\">{message}</div>\n      <Filter\n        filterValue={filterValue}\n        handleFilterChange={handleFilterChange}\n      />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newPhone={newPhone}\n        handlePhoneChange={handlePhoneChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filterValue={filterValue}\n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}